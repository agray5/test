{"version":3,"sources":["logo.svg","Redux/reducers/index.ts","Redux/reducers/actionTypes.ts","Redux/store.ts","services/Firebase.ts","Redux/reducers/actions.ts","pages/Login/Login.tsx","pages/Home/Home.tsx","pages/Home/HomeContainer.tsx","pages/SignUp/SignUp.tsx","pages/SignUp/SignUpContainer.tsx","components/molecules/Drawer.tsx","components/molecules/TablePaginationActions.tsx","components/molecules/AddUserDialog.tsx","components/molecules/GlobalFilter.tsx","components/molecules/TableToolbar.tsx","components/molecules/EnhancedTable.tsx","components/molecules/makeData.ts","components/molecules/ProductTable.tsx","pages/AllProducts.tsx","Router.tsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","initState","user","Firebase","RootReducer","state","action","type","set","payload","key","value","console","log","store","createStore","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","email","password","auth","createUserWithEmailAndPassword","catch","error","code","errorMessage","message","alert","signInWithEmailAndPassword","onAuthStateChanged","dispatch","setUser","Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","SignIn","props","classes","Container","component","maxWidth","CssBaseline","className","Avatar","noValidate","TextField","required","fullWidth","id","label","name","autoComplete","autoFocus","onChange","e","preventDefault","setUsername","target","setPassword","FormControlLabel","control","Checkbox","Button","onClick","signin","Grid","container","item","xs","Box","mt","Home","this","Login","React","Component","connect","useState","username","signIn","SignUp","justify","to","signUp","createStyles","root","drawer","breakpoints","up","flexShrink","appBar","marginLeft","menuButton","marginRight","toolbar","mixins","drawerPaper","content","flexGrow","padding","useTheme","mobileOpen","setMobileOpen","handleDrawerToggle","Item","text","url","Icon","ListItem","button","ListItemIcon","ListItemText","primary","Divider","List","HomeIcon","InboxIcon","TagIcon","AppBar","position","Toolbar","IconButton","aria-label","edge","noWrap","Hidden","smUp","implementation","Drawer","anchor","direction","open","onClose","ModalProps","keepMounted","xsDown","TablePaginationActions","count","page","rowsPerPage","onChangePage","event","disabled","Math","ceil","max","initialUser","firstName","lastName","age","visits","status","progress","subRows","undefined","AddUserDialog","addUserHandler","setOpen","addMultiple","switchState","setSwitchState","handleClose","handleChange","Tooltip","title","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogContentText","DialogActions","Switch","checked","inputProps","search","borderRadius","shape","fade","common","white","searchIcon","height","pointerEvents","justifyContent","inputRoot","inputInput","transition","transitions","create","GlobalFilter","preGlobalFilteredRows","globalFilter","setGlobalFilter","length","InputBase","placeholder","input","useToolbarStyles","paddingLeft","paddingRight","highlight","lighten","light","dark","flex","TableToolbar","numSelected","deleteUserHandler","clsx","IndeterminateCheckbox","forwardRef","ref","indeterminate","rest","defaultRef","useRef","resolvedRef","useEffect","current","inputStyle","border","background","defaultColumn","Cell","initialValue","cell","index","row","column","updateMyData","setValue","style","onBlur","EnhancedTable","columns","data","setData","skipPageReset","useTable","autoResetPage","useGlobalFilter","useSortBy","usePagination","useRowSelect","hooks","allColumns","push","Header","getToggleAllRowsSelectedProps","getToggleRowSelectedProps","getTableProps","headerGroups","prepareRow","gotoPage","setPageSize","pageIndex","pageSize","selectedRowIds","TableContainer","Object","keys","array","indexs","newData","map","x","parseInt","filter","_","i","includes","concat","TableHead","headerGroup","TableRow","getHeaderGroupProps","headers","TableCell","getHeaderProps","getSortByToggleProps","render","TableSortLabel","active","isSorted","isSortedDesc","TableBody","getRowProps","cells","getCellProps","TableFooter","TablePagination","rowsPerPageOptions","colSpan","SelectProps","native","newPage","onChangeRowsPerPage","Number","ActionsComponent","range","len","arr","newPerson","statusChance","random","namor","generate","words","numbers","floor","App","useMemo","accessor","lens","makeDataLevel","depth","d","makeData","setSkipPageReset","rowIndex","columnId","old","ProductTable","Routed","path","Routes","SignUpContainer","AllProducts","HomeContainer","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a2f57fe8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import { set } from 'timm'\nimport { SET } from \"./actionTypes\";\nimport Firebase from '../../services/Firebase';\n\nexport type State = {\n  user: firebase.User | null\n}\n\nconst initState:State = {\n  user: Firebase && Firebase.user \n}\n\nfunction RootReducer(state = initState, action: any) {\n  switch(action.type) {\n    case SET: \n      state = set(state, action.payload.key, action.payload.value)\n  }\n\n  console.log(\"STORE:: \", action, action.value, state)\n  return state;\n}\n\nexport default RootReducer","export const SET = 'SET'\r\n\r\nexport const SET_USER = 'SET_USER'\r\n\r\n","import { createStore } from 'redux'\nimport RootReducer from './reducers'\n\nconst store = createStore(RootReducer);\nexport default store;","import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport store from \"../Redux/store\";\nimport { setUser } from \"../Redux/reducers/actions\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyA6ZvIfSNbAQ4cPi85BdWkftAjRzlYzUfY\",\n  authDomain: \"dashboard-152b8.firebaseapp.com\",\n  databaseURL: \"https://dashboard-152b8.firebaseio.com\",\n  projectId: \"dashboard-152b8\",\n  storageBucket: \"dashboard-152b8.appspot.com\",\n  messagingSenderId: \"965967275969\",\n  appId: \"1:965967275969:web:1c2abccbed760ec8dcb140\",\n  measurementId: \"G-S1CEDL3LSB\"\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n//firebase.analytics();\n\nclass Firebase {\n  static user: firebase.User;\n\n  static signUp (email: string, password: string) {\n    return firebase\n      .auth()\n      .createUserWithEmailAndPassword(email, password)\n      .catch(function(error) {\n      // Handle Errors here.\n      var errorCode = error.code;\n      var errorMessage = error.message;\n      alert(errorMessage)\n      console.error(errorMessage)\n      //TODO: Handle Errors\n      // ...\n    });\n  }\n\n  static signIn (email: string, password: string) {\n    return firebase.auth().signInWithEmailAndPassword(email, password).catch(function(error) {\n      // Handle Errors here.\n      var errorCode = error.code;\n      var errorMessage = error.message;\n      alert(errorMessage)\n      console.error(errorMessage)\n      //TODO: Handle Errors\n      // ...\n    });\n  }\n}\n\nfirebase.auth().onAuthStateChanged(function(user) {\n  if (user) {\n    Firebase.user = user;\n  }\n  store.dispatch(setUser(user))\n});\n\nexport default Firebase;\n//","import { SET_USER, SET } from \"./actionTypes\";\r\n\r\nexport function setUser(user:firebase.User | null) {\r\n  return {\r\n    type: SET,\r\n    payload: {key: 'user', value: user}\r\n  }\r\n}","import React, { FunctionComponent, ChangeEvent } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\n\nexport type SignInProps = {\n  signin: () => void\n  setPassword: (password: string) => void\n  setUsername: (username: string) => void\n}\nconst SignIn:FunctionComponent<SignInProps> = (props) => {\n  const classes = useStyles();\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n            onChange={(e:ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n              e.preventDefault();\n              props.setUsername(e.target.value)}\n            }\n            />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            onChange={(e:ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) =>{ \n              e.preventDefault();\n              props.setPassword(e.target.value)}\n              }\n            />\n          <FormControlLabel\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\n            label=\"Remember me\"\n          />\n          <Button\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={props.signin}\n          >\n            Sign In\n          </Button>\n          <Grid container>\n            <Grid item xs>\n              <Link href=\"#\" variant=\"body2\">\n                Forgot password?\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link href=\"/signup\" variant=\"body2\">\n                {\"Don't have an account? Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n\nexport default SignIn","import React from 'react'\r\nimport Login from '../Login/Login'\r\n\r\nexport type HomeProps = {\r\n  user: firebase.User\r\n  signin: () => void\r\n  setPassword: (password: string) => void\r\n  setUsername: (username: string) => void\r\n}\r\n\r\nclass Home extends React.Component<HomeProps> {\r\n\r\n  render () {\r\n    if(!this.props.user) return <Login {...this.props}/>\r\n    else return <div />\r\n  }\r\n}\r\n\r\nexport default Home","import React, {useState} from 'react'\r\n\r\nimport Firebase from '../../services/Firebase' \r\nimport { Redirect } from 'react-router-dom';\r\nimport Home from './Home';\r\nimport { State } from '../../Redux/reducers';\r\nimport { connect } from 'react-redux';\r\n\r\nconst HomeContainer = () => {\r\n  const [password, setPassword] = useState('');\r\n  const [username, setUsername] = useState('');\r\n\r\n\r\n  const signin = () => {\r\n    Firebase.signIn(username, password);\r\n  }\r\n  return <Home \r\n      user={Firebase.user} \r\n      signin={signin}\r\n      setPassword={setPassword}\r\n      setUsername={setUsername} \r\n  />\r\n}\r\nconst mapStateToProps = (state: State) => ({\r\n  user: state.user\r\n})\r\nexport default connect(mapStateToProps)(HomeContainer);\r\n\r\n","import React, { FunctionComponent, ChangeEvent } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { SignInProps } from '../Login/Login';\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst SignUp:FunctionComponent<SignInProps> = (props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <Grid container spacing={2}>\r\n            {/*<Grid item xs={12} sm={6}>\r\n              <TextField\r\n                autoComplete=\"fname\"\r\n                name=\"firstName\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"firstName\"\r\n                label=\"First Name\"\r\n                autoFocus\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"lastName\"\r\n                label=\"Last Name\"\r\n                name=\"lastName\"\r\n                autoComplete=\"lname\"\r\n  />\r\n  </Grid>*/}\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                onChange={(e:ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n                  e.preventDefault();\r\n                  props.setUsername(e.target.value)}\r\n                } \r\n                />\r\n              \r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                onChange={(e:ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) =>{\r\n                  e.preventDefault();\r\n                  props.setPassword(e.target.value)\r\n                }} \r\n                />\r\n              \r\n            </Grid>\r\n            {/*<Grid item xs={12}>\r\n              <FormControlLabel\r\n                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\r\n                label=\"I want to receive inspiration, marketing promotions and updates via email.\"\r\n              />\r\n                </Grid>*/}\r\n          </Grid>\r\n          <Button\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={props.signin}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link href=\"/\" variant=\"body2\">\r\n                Already have an account? Sign in\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={5}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default SignUp","import React, {useState, FunctionComponent} from 'react'\r\nimport {connect} from 'react-redux'\r\n\r\nimport Firebase from '../../services/Firebase' \r\nimport SignUp from './SignUp';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { State } from '../../Redux/reducers';\r\n\r\nconst HomeContainer:FunctionComponent<typeof mapStateToProps> = () => {\r\n  const [password, setPassword] = useState('');\r\n  const [username, setUsername] = useState('');\r\n\r\n  const signup = () => {\r\n    Firebase.signUp(username, password);\r\n  }\r\n\r\n  if (Firebase.user) return <Redirect to=\"/\" />\r\n  return (\r\n    <SignUp \r\n      signin={signup}\r\n      setPassword={setPassword}\r\n      setUsername={setUsername}\r\n  />)\r\n}\r\nconst mapStateToProps = (state: State) => ({\r\n  user: state.user\r\n})\r\n\r\n// @ts-ignore\r\nexport default connect(mapStateToProps)(HomeContainer);\r\n\r\n","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InboxIcon from '@material-ui/icons/MoveToInboxOutlined';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport HomeIcon from '@material-ui/icons/HomeOutlined'\r\nimport TagIcon from '@material-ui/icons/LoyaltyOutlined'\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles, useTheme, Theme, createStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Firebase from '../../services/Firebase';\r\nimport { State } from '../../Redux/reducers';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      // @ts-ignore\r\n      display: props => !props.user?'none':'flex',\r\n    },\r\n    drawer: {\r\n      [theme.breakpoints.up('sm')]: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n      },\r\n    },\r\n    appBar: {\r\n      [theme.breakpoints.up('sm')]: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n      },\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n      [theme.breakpoints.up('sm')]: {\r\n        display: 'none',\r\n      },\r\n    },\r\n    // necessary for content to be below app bar\r\n    toolbar: theme.mixins.toolbar,\r\n    drawerPaper: {\r\n      width: drawerWidth,\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(3),\r\n    },\r\n  }),\r\n);\r\n\r\ninterface ResponsiveDrawerProps {\r\n  /**\r\n   * Injected by the documentation to work in an iframe.\r\n   * You won't need it on your project.\r\n   */\r\n  container?: any;\r\n}\r\n\r\nconst ResponsiveDrawer = (props: ResponsiveDrawerProps) => {\r\n  const { container } = props;\r\n  const classes = useStyles({user: Firebase.user});\r\n  const theme = useTheme();\r\n  const [mobileOpen, setMobileOpen] = React.useState(false);\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n\r\nconst Item = ({text, url, Icon}: {text: string, url?: string, Icon?: any}) => (\r\n  <ListItem button component={Link} key={text} to={url || \"#\"}>\r\n    <ListItemIcon>{ Icon? <Icon />:<div />}</ListItemIcon>\r\n    <ListItemText primary={text} />\r\n  </ListItem>\r\n)\r\n\r\n  const drawer = (\r\n    <div>\r\n      <div className={classes.toolbar} />\r\n      <Divider />\r\n      <List>\r\n        <Item text=\"Home\" Icon={HomeIcon} url=\"/\"/>\r\n        <Item text=\"Orders\" Icon={InboxIcon}/>\r\n        <Item text=\"Products\" Icon={TagIcon}/>\r\n        <Item text=\"All Products\" url=\"/all_products\" />\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        <Item text=\"Inventory\" />\r\n        <Item text=\"Customers\" />\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            edge=\"start\"\r\n            onClick={handleDrawerToggle}\r\n            className={classes.menuButton}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap>\r\n            Responsive drawer\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n        <Hidden smUp implementation=\"css\">\r\n          <Drawer\r\n            container={container}\r\n            variant=\"temporary\"\r\n            anchor={theme.direction === 'rtl' ? 'right' : 'left'}\r\n            open={mobileOpen}\r\n            onClose={handleDrawerToggle}\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            ModalProps={{\r\n              keepMounted: true, // Better open performance on mobile.\r\n            }}\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n        </Hidden>\r\n        <Hidden xsDown implementation=\"css\">\r\n          <Drawer\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            variant=\"permanent\"\r\n            open\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n        </Hidden>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state: State) => ({\r\n  user: state.user\r\n})\r\n\r\nexport default connect(mapStateToProps)(ResponsiveDrawer)","import React from 'react'\r\n\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft'\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight'\r\nimport LastPageIcon from '@material-ui/icons/LastPage'\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}))\r\n\r\n// @ts-ignore\r\nconst TablePaginationActions = props => {\r\n  const classes = useStyles()\r\n  const theme = useTheme()\r\n  const { count, page, rowsPerPage, onChangePage } = props\r\n\r\n  // @ts-ignore\r\n  const handleFirstPageButtonClick = event => {\r\n    onChangePage(event, 0)\r\n  }\r\n  // @ts-ignore\r\n  const handleBackButtonClick = event => {\r\n    onChangePage(event, page - 1)\r\n  }\r\n  // @ts-ignore\r\n  const handleNextButtonClick = event => {\r\n    onChangePage(event, page + 1)\r\n  }\r\n  // @ts-ignore\r\n  const handleLastPageButtonClick = event => {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1))\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleBackButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"previous page\"\r\n      >\r\n        {theme.direction === 'rtl' ? (\r\n          <KeyboardArrowRight />\r\n        ) : (\r\n          <KeyboardArrowLeft />\r\n        )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? (\r\n          <KeyboardArrowLeft />\r\n        ) : (\r\n          <KeyboardArrowRight />\r\n        )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  )\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n}\r\n\r\nexport default TablePaginationActions\r\n","import React, { useState } from 'react'\r\n\r\nimport AddIcon from '@material-ui/icons/Add'\r\nimport Button from '@material-ui/core/Button'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogContentText from '@material-ui/core/DialogContentText'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport PropTypes from 'prop-types'\r\nimport Switch from '@material-ui/core/Switch'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\n\r\nconst initialUser = {\r\n  firstName: '',\r\n  lastName: '',\r\n  age: 0,\r\n  visits: 0,\r\n  status: 'single',\r\n  progress: 0,\r\n  subRows: undefined,\r\n}\r\n\r\n// @ts-ignore\r\nconst AddUserDialog = props => {\r\n  const [user, setUser] = useState(initialUser)\r\n  const { addUserHandler } = props\r\n  const [open, setOpen] = React.useState(false)\r\n\r\n  const [switchState, setSwitchState] = React.useState({\r\n    addMultiple: false,\r\n  })\r\n// @ts-ignore\r\n  const handleSwitchChange = name => event => {\r\n    setSwitchState({ ...switchState, [name]: event.target.checked })\r\n  }\r\n\r\n  const resetSwitch = () => {\r\n    setSwitchState({ addMultiple: false })\r\n  }\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true)\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setOpen(false)\r\n    resetSwitch()\r\n  }\r\n\r\n  // @ts-ignore\r\n  const handleAdd = event => {\r\n    addUserHandler(user)\r\n    setUser(initialUser)\r\n    switchState.addMultiple ? setOpen(true) : setOpen(false)\r\n  }\r\n// @ts-ignore\r\n  const handleChange = name => ({ target: { value } }) => {\r\n    setUser({ ...user, [name]: value })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Tooltip title=\"Add\">\r\n        <IconButton aria-label=\"add\" onClick={handleClickOpen}>\r\n          <AddIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Add User</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>Demo add item to react table.</DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            label=\"First Name\"\r\n            type=\"text\"\r\n            fullWidth\r\n            value={user.firstName}\r\n            onChange={handleChange('firstName')}\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            label=\"Last Name\"\r\n            type=\"text\"\r\n            fullWidth\r\n            value={user.lastName}\r\n            onChange={handleChange('lastName')}\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            label=\"Age\"\r\n            type=\"number\"\r\n            fullWidth\r\n            value={user.age}\r\n            onChange={handleChange('age')}\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            label=\"Visits\"\r\n            type=\"number\"\r\n            fullWidth\r\n            value={user.visits}\r\n            onChange={handleChange('visits')}\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            label=\"Status\"\r\n            type=\"text\"\r\n            fullWidth\r\n            value={user.status}\r\n            onChange={handleChange('status')}\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            label=\"Profile Progress\"\r\n            type=\"number\"\r\n            fullWidth\r\n            value={user.progress}\r\n            onChange={handleChange('progress')}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Tooltip title=\"Add multiple\">\r\n            <Switch\r\n              checked={switchState.addMultiple}\r\n              onChange={handleSwitchChange('addMultiple')}\r\n              value=\"addMultiple\"\r\n              inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n            />\r\n          </Tooltip>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleAdd} color=\"primary\">\r\n            Add\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  )\r\n}\r\n\r\nAddUserDialog.propTypes = {\r\n  addUserHandler: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default AddUserDialog\r\n","import React from 'react'\r\n\r\nimport InputBase from '@material-ui/core/InputBase'\r\nimport { fade, makeStyles } from '@material-ui/core/styles'\r\nimport PropTypes from 'prop-types'\r\nimport SearchIcon from '@material-ui/icons/Search'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginRight: theme.spacing(2),\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(3),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    width: theme.spacing(7),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 7),\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: 200,\r\n    },\r\n  },\r\n}))\r\n\r\nconst GlobalFilter = ({\r\n  // @ts-ignore\r\n  preGlobalFilteredRows,\r\n  // @ts-ignore\r\n  globalFilter,\r\n  // @ts-ignore\r\n  setGlobalFilter,\r\n}) => {\r\n  const classes = useStyles()\r\n  const count = preGlobalFilteredRows.length\r\n\r\n  // Global filter only works with pagination from the first page.\r\n  // This may not be a problem for server side pagination when\r\n  // only the current page is downloaded.\r\n\r\n  return (\r\n    <div className={classes.search}>\r\n      <div className={classes.searchIcon}>\r\n        <SearchIcon />\r\n      </div>\r\n      <InputBase\r\n        value={globalFilter || ''}\r\n        onChange={e => {\r\n          setGlobalFilter(e.target.value || undefined) // Set undefined to remove the filter entirely\r\n        }}\r\n        placeholder={`${count} records...`}\r\n        classes={{\r\n          root: classes.inputRoot,\r\n          input: classes.inputInput,\r\n        }}\r\n        inputProps={{ 'aria-label': 'search' }}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nGlobalFilter.propTypes = {\r\n  preGlobalFilteredRows: PropTypes.array.isRequired,\r\n  globalFilter: PropTypes.string.isRequired,\r\n  setGlobalFilter: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default GlobalFilter\r\n","import React from 'react'\r\n\r\nimport AddUserDialog from './AddUserDialog'\r\nimport clsx from 'clsx'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport GlobalFilter from './GlobalFilter'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport { lighten, makeStyles } from '@material-ui/core/styles'\r\nimport PropTypes from 'prop-types'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}))\r\n  // @ts-ignore\r\nconst TableToolbar = props => {\r\n  const classes = useToolbarStyles()\r\n  const {\r\n    numSelected,\r\n    addUserHandler,\r\n    deleteUserHandler,\r\n    preGlobalFilteredRows,\r\n    setGlobalFilter,\r\n    globalFilter,\r\n  } = props\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      <AddUserDialog addUserHandler={addUserHandler} />\r\n      {numSelected > 0 ? (\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n        >\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n          Products\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\" onClick={deleteUserHandler}>\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <GlobalFilter\r\n          preGlobalFilteredRows={preGlobalFilteredRows}\r\n          globalFilter={globalFilter}\r\n          setGlobalFilter={setGlobalFilter}\r\n        />\r\n      )}\r\n    </Toolbar>\r\n  )\r\n}\r\n\r\nTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n  addUserHandler: PropTypes.func.isRequired,\r\n  deleteUserHandler: PropTypes.func.isRequired,\r\n  setGlobalFilter: PropTypes.func.isRequired,\r\n  preGlobalFilteredRows: PropTypes.array.isRequired,\r\n  globalFilter: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default TableToolbar\r\n","// @ts-nocheck\r\nimport React from 'react'\r\n\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\nimport MaUTable from '@material-ui/core/Table'\r\nimport PropTypes from 'prop-types'\r\nimport TableBody from '@material-ui/core/TableBody'\r\nimport TableCell from '@material-ui/core/TableCell'\r\nimport TableContainer from '@material-ui/core/TableContainer'\r\nimport TableFooter from '@material-ui/core/TableFooter'\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport TablePagination from '@material-ui/core/TablePagination'\r\nimport TablePaginationActions from './TablePaginationActions'\r\nimport TableRow from '@material-ui/core/TableRow'\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\r\nimport TableToolbar from './TableToolbar'\r\nimport {\r\n  useGlobalFilter,\r\n  usePagination,\r\n  useRowSelect,\r\n  useSortBy,\r\n  useTable,\r\n} from 'react-table'\r\n\r\nconst IndeterminateCheckbox = React.forwardRef(\r\n  // @ts-ignore\r\n  ({ indeterminate, ...rest }, ref) => {\r\n    const defaultRef = React.useRef()\r\n    const resolvedRef = ref || defaultRef\r\n\r\n    React.useEffect(() => {\r\n       // @ts-ignore\r\n      resolvedRef.current.indeterminate = indeterminate\r\n    }, [resolvedRef, indeterminate])\r\n\r\n    return (\r\n      <>\r\n        <Checkbox ref={\r\n           // @ts-ignore\r\n          resolvedRef} {...rest} />\r\n      </>\r\n    )\r\n  }\r\n)\r\n\r\nconst inputStyle = {\r\n  padding: 0,\r\n  margin: 0,\r\n  border: 0,\r\n  background: 'transparent',\r\n}\r\n\r\n// Create an editable cell renderer\r\nconst EditableCell = ({\r\n  cell: { value: initialValue },\r\n  row: { index },\r\n  column: { id },\r\n  updateMyData, // This is a custom function that we supplied to our table instance\r\n}) => {\r\n  // We need to keep and update the state of the cell normally\r\n  const [value, setValue] = React.useState(initialValue)\r\n\r\n  const onChange = e => {\r\n    setValue(e.target.value)\r\n  }\r\n\r\n  // We'll only update the external data when the input is blurred\r\n  const onBlur = () => {\r\n    updateMyData(index, id, value)\r\n  }\r\n\r\n  // If the initialValue is changed externall, sync it up with our state\r\n  React.useEffect(() => {\r\n    setValue(initialValue)\r\n  }, [initialValue])\r\n\r\n  return (\r\n    <input\r\n      style={inputStyle}\r\n      value={value}\r\n      onChange={onChange}\r\n      onBlur={onBlur}\r\n    />\r\n  )\r\n}\r\n\r\nEditableCell.propTypes = {\r\n  cell: PropTypes.shape({\r\n    value: PropTypes.any.isRequired,\r\n  }),\r\n  row: PropTypes.shape({\r\n    index: PropTypes.number.isRequired,\r\n  }),\r\n  column: PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n  }),\r\n  updateMyData: PropTypes.func.isRequired,\r\n}\r\n\r\n// Set our editable cell renderer as the default Cell renderer\r\nconst defaultColumn = {\r\n  Cell: EditableCell,\r\n}\r\n\r\nconst EnhancedTable = ({\r\n  columns,\r\n  data,\r\n  setData,\r\n  updateMyData,\r\n  skipPageReset,\r\n}) => {\r\n  const {\r\n    getTableProps,\r\n    headerGroups,\r\n    prepareRow,\r\n    page,\r\n    gotoPage,\r\n    setPageSize,\r\n    preGlobalFilteredRows,\r\n    setGlobalFilter,\r\n    state: { pageIndex, pageSize, selectedRowIds, globalFilter },\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      defaultColumn,\r\n      autoResetPage: !skipPageReset,\r\n      // updateMyData isn't part of the API, but\r\n      // anything we put into these options will\r\n      // automatically be available on the instance.\r\n      // That way we can call this function from our\r\n      // cell renderer!\r\n      updateMyData,\r\n    },\r\n    useGlobalFilter,\r\n    useSortBy,\r\n    usePagination,\r\n    useRowSelect,\r\n    hooks => {\r\n      hooks.allColumns.push(columns => [\r\n        // Let's make a column for selection\r\n        {\r\n          id: 'selection',\r\n          // The header can use the table's getToggleAllRowsSelectedProps method\r\n          // to render a checkbox.  Pagination is a problem since this will select all\r\n          // rows even though not all rows are on the current page.  The solution should\r\n          // be server side pagination.  For one, the clients should not download all\r\n          // rows in most cases.  The client should only download data for the current page.\r\n          // In that case, getToggleAllRowsSelectedProps works fine.\r\n          Header: ({ getToggleAllRowsSelectedProps }) => (\r\n            <div>\r\n              <IndeterminateCheckbox {...getToggleAllRowsSelectedProps()} />\r\n            </div>\r\n          ),\r\n          // The cell can use the individual row's getToggleRowSelectedProps method\r\n          // to the render a checkbox\r\n          Cell: ({ row }) => (\r\n            <div>\r\n              <IndeterminateCheckbox {...row.getToggleRowSelectedProps()} />\r\n            </div>\r\n          ),\r\n        },\r\n        ...columns,\r\n      ])\r\n    }\r\n  )\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    gotoPage(newPage)\r\n  }\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setPageSize(Number(event.target.value))\r\n  }\r\n\r\n  const removeByIndexs = (array, indexs) =>\r\n    array.filter((_, i) => !indexs.includes(i))\r\n\r\n  const deleteUserHandler = event => {\r\n    const newData = removeByIndexs(\r\n      data,\r\n      Object.keys(selectedRowIds).map(x => parseInt(x, 10))\r\n    )\r\n    setData(newData)\r\n  }\r\n\r\n  const addUserHandler = user => {\r\n    const newData = data.concat([user])\r\n    setData(newData)\r\n  }\r\n\r\n  // Render the UI for your table\r\n  return (\r\n    <TableContainer>\r\n      <TableToolbar\r\n        numSelected={Object.keys(selectedRowIds).length}\r\n        deleteUserHandler={deleteUserHandler}\r\n        addUserHandler={addUserHandler}\r\n        preGlobalFilteredRows={preGlobalFilteredRows}\r\n        setGlobalFilter={setGlobalFilter}\r\n        globalFilter={globalFilter}\r\n      />\r\n      <MaUTable {...getTableProps()}>\r\n        <TableHead>\r\n          {headerGroups.map(headerGroup => (\r\n            <TableRow {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map(column => (\r\n                <TableCell\r\n                  {...(column.id === 'selection'\r\n                    ? column.getHeaderProps()\r\n                    : column.getHeaderProps(column.getSortByToggleProps()))}\r\n                >\r\n                  {column.render('Header')}\r\n                  {column.id !== 'selection' ? (\r\n                    <TableSortLabel\r\n                      active={column.isSorted}\r\n                      // react-table has a unsorted state which is not treated here\r\n                      direction={column.isSortedDesc ? 'desc' : 'asc'}\r\n                    />\r\n                  ) : null}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          ))}\r\n        </TableHead>\r\n        <TableBody>\r\n          {page.map((row, i) => {\r\n            prepareRow(row)\r\n            return (\r\n              <TableRow {...row.getRowProps()}>\r\n                {row.cells.map(cell => {\r\n                  return (\r\n                    <TableCell {...cell.getCellProps()}>\r\n                      {cell.render('Cell')}\r\n                    </TableCell>\r\n                  )\r\n                })}\r\n              </TableRow>\r\n            )\r\n          })}\r\n        </TableBody>\r\n\r\n        <TableFooter>\r\n          <TableRow>\r\n            <TablePagination\r\n              rowsPerPageOptions={[\r\n                5,\r\n                10,\r\n                25,\r\n                { label: 'All', value: data.length },\r\n              ]}\r\n              colSpan={3}\r\n              count={data.length}\r\n              rowsPerPage={pageSize}\r\n              page={pageIndex}\r\n              SelectProps={{\r\n                inputProps: { 'aria-label': 'rows per page' },\r\n                native: true,\r\n              }}\r\n              onChangePage={handleChangePage}\r\n              onChangeRowsPerPage={handleChangeRowsPerPage}\r\n              ActionsComponent={TablePaginationActions}\r\n            />\r\n          </TableRow>\r\n        </TableFooter>\r\n      </MaUTable>\r\n    </TableContainer>\r\n  )\r\n}\r\n\r\nEnhancedTable.propTypes = {\r\n  columns: PropTypes.array.isRequired,\r\n  data: PropTypes.array.isRequired,\r\n  updateMyData: PropTypes.func.isRequired,\r\n  setData: PropTypes.func.isRequired,\r\n  skipPageReset: PropTypes.bool.isRequired,\r\n}\r\n\r\nexport default EnhancedTable\r\n","import namor from 'namor'\r\n\r\n// @ts-ignore\r\nconst range = len => {\r\n  const arr = []\r\n  for (let i = 0; i < len; i++) {\r\n    arr.push(i)\r\n  }\r\n  return arr\r\n}\r\n\r\nconst newPerson = () => {\r\n  const statusChance = Math.random()\r\n  return {\r\n    firstName: namor.generate({ words: 1, numbers: 0 }),\r\n    lastName: namor.generate({ words: 1, numbers: 0 }),\r\n    age: Math.floor(Math.random() * 30),\r\n    visits: Math.floor(Math.random() * 100),\r\n    progress: Math.floor(Math.random() * 100),\r\n    status:\r\n      statusChance > 0.66\r\n        ? 'relationship'\r\n        : statusChance > 0.33\r\n        ? 'complicated'\r\n        : 'single',\r\n  }\r\n}\r\n// @ts-ignore\r\nexport default function makeData(...lens) {\r\n  // @ts-ignore\r\n  const makeDataLevel = (depth = 0) => {\r\n    const len = lens[depth]\r\n    return range(len).map(d => {\r\n      return {\r\n        ...newPerson(),\r\n        subRows: lens[depth + 1] ? makeDataLevel(depth + 1) : undefined,\r\n      }\r\n    })\r\n  }\r\n\r\n  return makeDataLevel()\r\n}\r\n","import React from 'react'\r\n\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport EnhancedTable from './EnhancedTable'\r\nimport makeData from './makeData'\r\n\r\nconst App = () => {\r\n  const columns = React.useMemo(\r\n    () => [\r\n      {\r\n        Header: 'First Name',\r\n        accessor: 'firstName',\r\n      },\r\n      {\r\n        Header: 'Last Name',\r\n        accessor: 'lastName',\r\n      },\r\n      {\r\n        Header: 'Age',\r\n        accessor: 'age',\r\n      },\r\n      {\r\n        Header: 'Visits',\r\n        accessor: 'visits',\r\n      },\r\n      {\r\n        Header: 'Status',\r\n        accessor: 'status',\r\n      },\r\n      {\r\n        Header: 'Profile Progress',\r\n        accessor: 'progress',\r\n      },\r\n    ],\r\n    []\r\n  )\r\n\r\n  const [data, setData] = React.useState(React.useMemo(() => makeData(20), []))\r\n  const [skipPageReset, setSkipPageReset] = React.useState(false)\r\n\r\n  // We need to keep the table from resetting the pageIndex when we\r\n  // Update data. So we can keep track of that flag with a ref.\r\n\r\n  // When our cell renderer calls updateMyData, we'll use\r\n  // the rowIndex, columnId and new value to update the\r\n  // original data\r\n  // @ts-ignore\r\n  const updateMyData = (rowIndex, columnId, value) => {\r\n    // We also turn on the flag to not reset the page\r\n    setSkipPageReset(true)\r\n    // @ts-ignore\r\n    setData(old =>\r\n// @ts-ignore\r\n      old.map((row, index) => {\r\n        if (index === rowIndex) {\r\n          return {\r\n            ...old[rowIndex],\r\n            [columnId]: value,\r\n          }\r\n        }\r\n        return row\r\n      })\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <CssBaseline />\r\n      <EnhancedTable\r\n        columns={columns}\r\n        data={data}\r\n        setData={setData}\r\n        updateMyData={updateMyData}\r\n        skipPageReset={skipPageReset}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React, {useState} from 'react'\r\n\r\nimport Firebase from '../services/Firebase' \r\nimport { Redirect } from 'react-router-dom';\r\nimport { State } from '../Redux/reducers';\r\nimport { connect } from 'react-redux';\r\nimport { Typography } from '@material-ui/core';\r\nimport ProductTable from '../components/molecules/ProductTable'\r\n\r\nconst AllProducts = () => {\r\n  const [password, setPassword] = useState('');\r\n  const [username, setUsername] = useState('');\r\n\r\nconsole.log(\"LOADED\")\r\n  return (\r\n    <div>\r\n\r\n      <Typography variant=\"h2\">Products</Typography>\r\n      <ProductTable />\r\n    </div>\r\n  )\r\n}\r\nconst mapStateToProps = (state: State) => ({\r\n  user: state.user\r\n})\r\nexport default connect(mapStateToProps)(AllProducts);\r\n\r\n","import React, { FunctionComponent } from \"react\"\nimport { render } from \"react-dom\"\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nimport HomeContainer from \"./pages/Home/HomeContainer\";\nimport SignUpContainer from \"./pages/SignUp/SignUpContainer\";\nimport Drawer from \"./components/molecules/Drawer\";\nimport AllProducts from \"./pages/AllProducts\";\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n    },\n  }),\n);\n\n\nconst Routes = () => {\n    const classes = useStyles();\n\n    return(\n      <Router>\n        <Drawer />\n        <Switch>\n          <Routed path=\"/signup\" Component={SignUpContainer} />\n          <Routed path=\"/all_products\" Component={AllProducts}/>\n          <Routed path=\"/\" Component={HomeContainer} />\n        </Switch>        \n      </Router>\n    )\n}\n\nconst Routed:FunctionComponent<{Component: any, path: string}> = \n({Component, path}) => (\n  <Route path={path}>\n    <Component />\n  </Route>\n)\n\nexport default Routes","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Routes from './Router';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Routes />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux'\nimport store from './Redux/store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, \n  document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}