{"version":3,"sources":["logo.svg","Redux/reducers/index.ts","Redux/actionTypes.ts","Redux/store.ts","Redux/actions.ts","services/FirebaseListeners.ts","services/Firebase.ts","pages/Login/Login.tsx","pages/Home/Home.tsx","pages/Home/HomeContainer.tsx","pages/SignUp/SignUp.tsx","pages/SignUp/SignUpContainer.tsx","components/molecules/Drawer.tsx","components/molecules/TablePaginationActions.tsx","components/molecules/GlobalFilter.tsx","components/molecules/TableToolbar.tsx","components/molecules/EnhancedTable.tsx","components/atoms/Product.tsx","components/atoms/Inventory.tsx","components/molecules/ProductTable.tsx","components/atoms/DropImage.tsx","components/molecules/AddDialog.tsx","pages/AllProducts/AllProducts.tsx","pages/AllProducts/AllProductsContainer.tsx","Router.tsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","initState","user","Firebase","RootReducer","state","action","type","set","payload","key","value","console","log","store","createStore","applyMiddleware","thunk","setUser","setError","error","dispatch","getState","getStoreRef","on","data","products","val","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","database","storage","getStore","productImage","name","ref","off","this","addListeners","child","toString","paths","getDownloadURL","image","put","path","Object","keys","stores","userId","uid","getRef","once","ids","updates","forEach","id","update","newKey","push","addMemberToStore","email","password","auth","createUserWithEmailAndPassword","then","addMember","currentUser","catch","code","errorMessage","message","alert","signInWithEmailAndPassword","signOut","onAuthStateChanged","fetchStore","snapshot","User","resetListeners","Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","SignIn","props","classes","Container","component","maxWidth","CssBaseline","className","Avatar","noValidate","TextField","required","fullWidth","label","autoComplete","autoFocus","onChange","e","preventDefault","setUsername","target","setPassword","FormControlLabel","control","Checkbox","Button","onClick","signin","Grid","container","item","xs","Box","mt","Home","Login","React","Component","connect","useState","username","signIn","SignUp","setStore","justify","to","signUp","createStyles","root","drawer","breakpoints","up","flexShrink","appBar","marginLeft","menuButton","marginRight","toolbar","mixins","drawerPaper","content","flexGrow","padding","useTheme","mobileOpen","setMobileOpen","handleDrawerToggle","Item","text","url","Icon","ListItem","button","ListItemIcon","ListItemText","primary","Divider","List","HomeIcon","InboxIcon","TagIcon","AppBar","position","Toolbar","IconButton","aria-label","edge","noWrap","Hidden","smUp","implementation","Drawer","anchor","direction","open","onClose","ModalProps","keepMounted","xsDown","TablePaginationActions","count","page","rowsPerPage","onChangePage","event","disabled","Math","ceil","max","search","borderRadius","shape","fade","common","white","searchIcon","height","pointerEvents","justifyContent","inputRoot","inputInput","transition","transitions","create","GlobalFilter","preGlobalFilteredRows","globalFilter","setGlobalFilter","length","InputBase","undefined","placeholder","input","inputProps","useToolbarStyles","paddingLeft","paddingRight","highlight","lighten","light","dark","title","flex","TableToolbar","numSelected","deleteUserHandler","addUserHandler","clsx","Tooltip","IndeterminateCheckbox","forwardRef","indeterminate","rest","defaultRef","useRef","resolvedRef","useEffect","current","EnhancedTable","columns","setData","updateMyData","skipPageReset","useTable","autoResetPage","useGlobalFilter","useSortBy","usePagination","useRowSelect","hooks","allColumns","Header","getToggleAllRowsSelectedProps","Cell","row","getToggleRowSelectedProps","getTableProps","headerGroups","prepareRow","gotoPage","setPageSize","pageIndex","pageSize","selectedRowIds","TableContainer","array","indexs","newData","map","x","parseInt","filter","_","i","includes","deleteProducts","concat","TableHead","headerGroup","TableRow","getHeaderGroupProps","headers","column","TableCell","getHeaderProps","getSortByToggleProps","render","TableSortLabel","active","isSorted","isSortedDesc","TableBody","getRowProps","cells","cell","getCellProps","TableFooter","TablePagination","rowsPerPageOptions","colSpan","SelectProps","native","newPage","onChangeRowsPerPage","Number","ActionsComponent","Product","original","src","Inventory","App","useMemo","accessor","memoData","entries","setSkipPageReset","pList","values","rowIndex","columnId","old","index","baseStyle","borderWidth","borderColor","borderStyle","outline","activeStyle","acceptStyle","rejectStyle","thumbsContainer","flexWrap","thumb","border","marginBottom","boxSizing","thumbInner","minWidth","overflow","img","DropImage","setFiles","files","onDrop","useCallback","acceptedFiles","file","assign","preview","URL","createObjectURL","useDropzone","accept","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","style","thumbs","revokeObjectURL","initialState","stock","getPlaceholderImagePath","AddProductDialog","setState","loading","toggleLoading","addHandler","addMultiple","switchState","setSwitchState","handleClose","toggle","handleAdd","a","isEmpty","uploadStoreImage","last","handleFiles","handleChange","getStoreImagePath","LinearProgress","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogContentText","DialogActions","Switch","checked","textAlign","float","AllProducts","openAddDialog","toggleAddDialog","bind","ProductTable","addNewProduct","product","writeNewProduct","finally","addProduct","paddingTop","Routed","PrivateRoute","Routes","SignUpContainer","AllProductsContainer","HomeContainer","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4e64b7e7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import { set } from 'timm'\nimport { SET, CLEAR } from \"../actionTypes\";\nimport Firebase from '../../services/Firebase';\nimport { ProductType } from '../../types';\n\nexport type State = {\n  user: firebase.User | null,\n  products?: ProductType\n}\n\nconst initState:State = {\n  user: Firebase && Firebase.user \n}\n\nfunction RootReducer(state = initState, action: any) {\n  switch(action.type) {\n    case SET: \n      state = set(state, action.payload.key, action.payload.value); break;\n    case CLEAR:\n      state = initState; break;\n  }\n\n  console.log(\"STORE:: \", action, action.value, state)\n  return state;\n}\n\nexport default RootReducer","export const SET = 'SET'\r\nexport const CLEAR = 'CLEAR'\r\n\r\nexport const SET_USER = 'SET_USER'\r\n\r\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport RootReducer from './reducers';\n\nconst store = createStore(RootReducer, applyMiddleware(thunk));\nexport default store;","import { SET_USER, SET, CLEAR } from \"./actionTypes\";\r\nimport Firebase, { User } from \"../services/Firebase\";\r\nimport { ProductType } from \"../types\";\r\nimport { Dispatch } from \"redux\";\r\n\r\nexport function setUser(user: User) {\r\n  return set('user', user); \r\n}\r\n\r\nexport function setProducts<T>(products: T) {\r\n  return set('products', products); \r\n}\r\n\r\nexport function setError(error: string) {\r\n  console.error(error);\r\n  return set('error', error);\r\n}\r\n\r\nexport function addProduct (product: ProductType) {\r\n  return (dispatch:Dispatch ) => {\r\n    dispatch(set(\"loading\", true))\r\n\r\n    return Firebase.writeNewProduct(product)\r\n      .catch(error => dispatch(setError(error)))\r\n      .finally(() => dispatch(set(\"loading\", false)))\r\n  }\r\n}\r\n\r\nexport const clear = () => ({\r\n  type: CLEAR\r\n})\r\n\r\nconst set = <T>(key: string, value: T) => ({\r\n  type: SET,\r\n    payload: {key, value}\r\n})","import { Dispatch } from 'redux';\r\nimport Firebase from './Firebase';\r\nimport { setProducts, setError } from '../Redux/actions';\r\n\r\n\r\nconst error = (error: string, dispatch: Dispatch) => dispatch(setError(error));\r\n\r\nexport default function (dispatch: Dispatch, getState: any) {\r\n\tFirebase.getStoreRef(\"/products/\").on('value', data => {\r\n    dispatch(setProducts(data.val()));\r\n\t}, error);\r\n\r\n\t/*socket.on('reconnect', () => {\r\n\t\t/*\r\n\t\t * Here I need to use an action creator to produce\r\n\t\t * a Thunk function to dispatch. Additionally, the\r\n\t\t * dispatch depends on the current state.\r\n\t\t */\r\n\t\t/*var state = getState();\r\n\t\tif (state.chat.room && state.chat.username) {\r\n\t\t\tdispatch(join(state.chat.room, state.chat.username));\r\n\t\t}\r\n\t});*/\r\n}","import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firebase-database\";\nimport \"firebase/storage\";\nimport store from \"../Redux/store\";\nimport { setUser, clear } from \"../Redux/actions\";\nimport { UserType, ProductType } from \"../types\";\nimport addListeners from './FirebaseListeners'\nimport { set } from \"timm\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyA6ZvIfSNbAQ4cPi85BdWkftAjRzlYzUfY\",\n  authDomain: \"dashboard-152b8.firebaseapp.com\",\n  databaseURL: \"https://dashboard-152b8.firebaseio.com\",\n  projectId: \"dashboard-152b8\",\n  storageBucket: \"dashboard-152b8.appspot.com\",\n  messagingSenderId: \"965967275969\",\n  appId: \"1:965967275969:web:1c2abccbed760ec8dcb140\",\n  measurementId: \"G-S1CEDL3LSB\"\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n// Get a reference to the database service\nconst db = firebase.database();\n\n  // Get a reference to the storage service, which is used to create references in your storage bucket\nconst storage = firebase.storage();\n//firebase.analytics();\n\n//TODO\nexport type User = (firebase.User & UserType) | null;\nclass Firebase {\n  static user: User;\n\n  static paths() {\n    return {\n      store: () => \"/stores/\"+this.getStore(),\n      productImage: (name: string) => this.getStore()+\"/products/images/\"+name\n    }\n  }\n\n  static resetListeners() {\n    db.ref().off();\n    if(this.user) addListeners(store.dispatch, store.getState);\n  }\n\n  static getPlaceholderImagePath () {\n    return storage.ref(\"images/\").child(\"Placeholder.png\").toString()\n  }\n\n  static getStoreImagePath(name: string) {\n    const storageRef = storage.ref();\n    return storageRef.child(this.paths().productImage(name)).getDownloadURL();\n  }\n  static uploadStoreImage(name: string, image: Blob | Uint8Array | ArrayBuffer) {\n    const storageRef = storage.ref();\n    return storageRef.child(this.paths().productImage(name)).put(image);\n  }\n\n  static getRef (path: string) {\n    return db.ref(path);\n  }\n\n  static getStoreRef (path = '') {  \n    return db.ref(this.paths().store()+path);\n  }\n\n  static getStore () {\n    return Object.keys(this.user?.stores || {})[0];\n  }\n\n  static fetchStore (user: firebase.User) {\n    var userId = user.uid;\n    return this.getRef('/users/' + userId).once('value');\n  }\n\n  static deleteProducts (ids: string[]) {\n    let updates = {};\n    ids.forEach(id => updates = set(updates, id, null));\n    return this.getStoreRef().child('products').update(updates);\n  }\n\n  static writeNewProduct (data: ProductType) {\n    const newKey = this.getStoreRef().child('products').push().key;\n    //TODO better erroring\n    if(!newKey) console.error(\"Could not get new key for update\")\n\n    return this.getStoreRef().child('products').update({[newKey || \"error\"]: data});\n\n  }\n\n  static addMemberToStore (store: string, id: string) {\n    const ref = this.getRef(\"/stores/\"+store+\"/members\")\n    return ref.update({[id]: true});\n  }\n\n  static addMember (store: string, id: string) {\n    this.addMemberToStore(store, id);\n    const ref = this.getRef(\"/users\")\n    return ref.update({[id]: {stores: {[store]: true}}});\n  }\n\n  static signUp (email: string, password: string, store: string) {\n    return firebase\n      .auth()\n      .createUserWithEmailAndPassword(email, password)\n      .then(val => {\n        this.addMember(store, firebase.auth().currentUser?.uid || \"error\");\n      })\n      .catch(function(error) {\n      // Handle Errors here.\n      var errorCode = error.code;\n      var errorMessage = error.message;\n      alert(errorMessage)\n      console.error(errorMessage)\n      //TODO: Handle Errors\n      // ...\n    });\n  }\n\n  static signIn (email: string, password: string) {\n    return firebase.auth().signInWithEmailAndPassword(email, password).catch(function(error) {\n      // Handle Errors here.\n      var errorCode = error.code;\n      var errorMessage = error.message;\n      alert(errorMessage)\n      console.error(errorMessage)\n      //TODO: Handle Errors\n      // ...\n    });\n  }\n\n  static signOut () {\n    console.log(\"SIGN OUT\")\n    return firebase.auth().signOut().catch(function(error) {\n      var errorMessage = error.message;\n      alert(errorMessage)\n      console.error(errorMessage)\n    })\n  }\n\n}\n\nfirebase.auth().onAuthStateChanged(function(user) {\n  if(user) {\n    \n    Firebase.fetchStore(user).then(snapshot => {\n      const User =  {\n        ...user,\n        ...snapshot.val()\n      }\n\n      Firebase.user = User;\n      store.dispatch(setUser(User))\n      Firebase.resetListeners(); \n    })\n  }\n  else {\n    Firebase.user = null;\n    store.dispatch(setUser(null))\n    store.dispatch(clear())\n  }\n\n\n  Firebase.resetListeners(); \n});\n\nnew Firebase();\nexport default Firebase;\n//","import React, { FunctionComponent, ChangeEvent } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\n\nexport type SignInProps = {\n  signin: () => void\n  setPassword: (password: string) => void\n  setUsername: (username: string) => void\n}\nconst SignIn:FunctionComponent<SignInProps> = (props) => {\n  const classes = useStyles();\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n            onChange={(e:ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n              e.preventDefault();\n              props.setUsername(e.target.value)}\n            }\n            />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            onChange={(e:ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) =>{ \n              e.preventDefault();\n              props.setPassword(e.target.value)}\n              }\n            />\n          <FormControlLabel\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\n            label=\"Remember me\"\n          />\n          <Button\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={props.signin}\n          >\n            Sign In\n          </Button>\n          <Grid container>\n            <Grid item xs>\n              <Link href=\"#\" variant=\"body2\">\n                Forgot password?\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link href=\"/signup\" variant=\"body2\">\n                {\"Don't have an account? Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n\nexport default SignIn","import React from 'react'\r\nimport Login from '../Login/Login'\r\nimport { User } from '../../services/Firebase'\r\n\r\nexport type HomeProps = {\r\n  user: User\r\n  signin: () => void\r\n  setPassword: (password: string) => void\r\n  setUsername: (username: string) => void\r\n}\r\n\r\nclass Home extends React.Component<HomeProps> {\r\n\r\n  render () {\r\n    if(!this.props.user) return <Login {...this.props}/>\r\n    else return <div />\r\n  }\r\n}\r\n\r\nexport default Home","import React, {useState} from 'react'\r\n\r\nimport Firebase from '../../services/Firebase' \r\nimport { Redirect } from 'react-router-dom';\r\nimport Home from './Home';\r\nimport { State } from '../../Redux/reducers';\r\nimport { connect } from 'react-redux';\r\n\r\nconst HomeContainer = () => {\r\n  const [password, setPassword] = useState('');\r\n  const [username, setUsername] = useState('');\r\n\r\n\r\n  const signin = () => {\r\n    Firebase.signIn(username, password);\r\n  }\r\n  return <Home \r\n      user={Firebase.user} \r\n      signin={signin}\r\n      setPassword={setPassword}\r\n      setUsername={setUsername} \r\n  />\r\n}\r\nconst mapStateToProps = (state: State) => ({\r\n  user: state.user\r\n})\r\nexport default connect(mapStateToProps)(HomeContainer);\r\n\r\n","import React, { FunctionComponent, ChangeEvent } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { SignInProps } from '../Login/Login';\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst SignUp:FunctionComponent<SignInProps & {setStore: (id: string) => void}> = (props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <Grid container spacing={2}>\r\n            {/*<Grid item xs={12} sm={6}>\r\n              <TextField\r\n                autoComplete=\"fname\"\r\n                name=\"firstName\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"firstName\"\r\n                label=\"First Name\"\r\n                autoFocus\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"lastName\"\r\n                label=\"Last Name\"\r\n                name=\"lastName\"\r\n                autoComplete=\"lname\"\r\n  />\r\n  </Grid>*/}\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                onChange={(e:ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n                  e.preventDefault();\r\n                  props.setUsername(e.target.value)}\r\n                } \r\n                />\r\n              \r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                onChange={(e:ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) =>{\r\n                  e.preventDefault();\r\n                  props.setPassword(e.target.value)\r\n                }} \r\n                />\r\n              \r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"store\"\r\n                label=\"Store ID\"\r\n                name=\"store\"\r\n                onChange={(e:ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n                  e.preventDefault();\r\n                  props.setStore(e.target.value)}\r\n                } \r\n                />\r\n            </Grid>\r\n            {/*<Grid item xs={12}>\r\n              <FormControlLabel\r\n                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\r\n                label=\"I want to receive inspiration, marketing promotions and updates via email.\"\r\n              />\r\n                </Grid>*/}\r\n          </Grid>\r\n          <Button\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={props.signin}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link href=\"/\" variant=\"body2\">\r\n                Already have an account? Sign in\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={5}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default SignUp","import React, {useState, FunctionComponent} from 'react'\r\nimport {connect} from 'react-redux'\r\n\r\nimport Firebase from '../../services/Firebase' \r\nimport SignUp from './SignUp';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { State } from '../../Redux/reducers';\r\n\r\nconst HomeContainer:FunctionComponent<typeof mapStateToProps> = () => {\r\n  const [password, setPassword] = useState('');\r\n  const [username, setUsername] = useState('');\r\n  const [store, setStore] = useState('');\r\n\r\n  const signup = () => {\r\n    Firebase.signUp(username, password, store);\r\n  }\r\n\r\n  if (Firebase.user) return <Redirect to=\"/\" />\r\n  return (\r\n    <SignUp \r\n      signin={signup}\r\n      setPassword={setPassword}\r\n      setUsername={setUsername}\r\n      setStore={setStore}\r\n  />)\r\n}\r\nconst mapStateToProps = (state: State) => ({\r\n  user: state.user\r\n})\r\n\r\n// @ts-ignore\r\nexport default connect(mapStateToProps)(HomeContainer);\r\n\r\n","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InboxIcon from '@material-ui/icons/MoveToInboxOutlined';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport HomeIcon from '@material-ui/icons/HomeOutlined'\r\nimport TagIcon from '@material-ui/icons/LoyaltyOutlined'\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles, useTheme, Theme, createStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Firebase from '../../services/Firebase';\r\nimport { State } from '../../Redux/reducers';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      // @ts-ignore\r\n      display: props => !props.user?'none':'flex',\r\n    },\r\n    drawer: {\r\n      [theme.breakpoints.up('sm')]: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n      },\r\n    },\r\n    appBar: {\r\n      [theme.breakpoints.up('sm')]: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n      },\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n      [theme.breakpoints.up('sm')]: {\r\n        display: 'none',\r\n      },\r\n    },\r\n    // necessary for content to be below app bar\r\n    toolbar: theme.mixins.toolbar,\r\n    drawerPaper: {\r\n      width: drawerWidth,\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(3),\r\n    },\r\n  }),\r\n);\r\n\r\ninterface ResponsiveDrawerProps {\r\n  /**\r\n   * Injected by the documentation to work in an iframe.\r\n   * You won't need it on your project.\r\n   */\r\n  container?: any;\r\n}\r\n\r\nconst ResponsiveDrawer = (props: ResponsiveDrawerProps) => {\r\n  const { container } = props;\r\n  const classes = useStyles({user: Firebase});\r\n  const theme = useTheme();\r\n  const [mobileOpen, setMobileOpen] = React.useState(false);\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n\r\nconst Item = ({text, url, Icon, onClick}: {text: string, url?: string, Icon?: any, onClick?: () => {}}) => (\r\n  <ListItem button component={Link} key={text} to={url || \"#\"} onClick={onClick}>\r\n    <ListItemIcon>{ Icon? <Icon />:<div />}</ListItemIcon>\r\n    <ListItemText primary={text} />\r\n  </ListItem>\r\n)\r\n\r\n  const drawer = (\r\n    <div>\r\n      <div className={classes.toolbar} />\r\n      <Divider />\r\n      <List>\r\n        <Item text=\"Home\" Icon={HomeIcon} url=\"/\"/>\r\n        <Item text=\"Orders\" Icon={InboxIcon}/>\r\n        <Item text=\"Products\" Icon={TagIcon}/>\r\n        <Item text=\"All Products\" url=\"/all_products\" />\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        <Item text=\"Inventory\" />\r\n        <Item text=\"Customers\" />\r\n        <Item text=\"Log Out\" onClick={Firebase.signOut}/>\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            edge=\"start\"\r\n            onClick={handleDrawerToggle}\r\n            className={classes.menuButton}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap>\r\n            Responsive drawer\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n        <Hidden smUp implementation=\"css\">\r\n          <Drawer\r\n            container={container}\r\n            variant=\"temporary\"\r\n            anchor={theme.direction === 'rtl' ? 'right' : 'left'}\r\n            open={mobileOpen}\r\n            onClose={handleDrawerToggle}\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            ModalProps={{\r\n              keepMounted: true, // Better open performance on mobile.\r\n            }}\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n        </Hidden>\r\n        <Hidden xsDown implementation=\"css\">\r\n          <Drawer\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            variant=\"permanent\"\r\n            open\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n        </Hidden>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state: State) => ({\r\n  user: state.user\r\n})\r\n\r\nexport default connect(mapStateToProps)(ResponsiveDrawer)","import React from 'react'\r\n\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft'\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight'\r\nimport LastPageIcon from '@material-ui/icons/LastPage'\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}))\r\n\r\n// @ts-ignore\r\nconst TablePaginationActions = props => {\r\n  const classes = useStyles()\r\n  const theme = useTheme()\r\n  const { count, page, rowsPerPage, onChangePage } = props\r\n\r\n  // @ts-ignore\r\n  const handleFirstPageButtonClick = event => {\r\n    onChangePage(event, 0)\r\n  }\r\n  // @ts-ignore\r\n  const handleBackButtonClick = event => {\r\n    onChangePage(event, page - 1)\r\n  }\r\n  // @ts-ignore\r\n  const handleNextButtonClick = event => {\r\n    onChangePage(event, page + 1)\r\n  }\r\n  // @ts-ignore\r\n  const handleLastPageButtonClick = event => {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1))\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleBackButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"previous page\"\r\n      >\r\n        {theme.direction === 'rtl' ? (\r\n          <KeyboardArrowRight />\r\n        ) : (\r\n          <KeyboardArrowLeft />\r\n        )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? (\r\n          <KeyboardArrowLeft />\r\n        ) : (\r\n          <KeyboardArrowRight />\r\n        )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  )\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n}\r\n\r\nexport default TablePaginationActions\r\n","import React from 'react'\r\n\r\nimport InputBase from '@material-ui/core/InputBase'\r\nimport { fade, makeStyles } from '@material-ui/core/styles'\r\nimport PropTypes from 'prop-types'\r\nimport SearchIcon from '@material-ui/icons/Search'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginRight: theme.spacing(2),\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(3),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    width: theme.spacing(7),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 7),\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: 200,\r\n    },\r\n  },\r\n}))\r\n\r\nconst GlobalFilter = ({\r\n  // @ts-ignore\r\n  preGlobalFilteredRows,\r\n  // @ts-ignore\r\n  globalFilter,\r\n  // @ts-ignore\r\n  setGlobalFilter,\r\n}) => {\r\n  const classes = useStyles()\r\n  const count = preGlobalFilteredRows.length\r\n\r\n  // Global filter only works with pagination from the first page.\r\n  // This may not be a problem for server side pagination when\r\n  // only the current page is downloaded.\r\n\r\n  return (\r\n    <div className={classes.search}>\r\n      <div className={classes.searchIcon}>\r\n        <SearchIcon />\r\n      </div>\r\n      <InputBase\r\n        value={globalFilter || ''}\r\n        onChange={e => {\r\n          setGlobalFilter(e.target.value || undefined) // Set undefined to remove the filter entirely\r\n        }}\r\n        placeholder={`${count} records...`}\r\n        classes={{\r\n          root: classes.inputRoot,\r\n          input: classes.inputInput,\r\n        }}\r\n        inputProps={{ 'aria-label': 'search' }}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nGlobalFilter.propTypes = {\r\n  preGlobalFilteredRows: PropTypes.array.isRequired,\r\n  globalFilter: PropTypes.string.isRequired,\r\n  setGlobalFilter: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default GlobalFilter\r\n","import React from 'react'\r\n\r\nimport clsx from 'clsx'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport GlobalFilter from './GlobalFilter'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport { lighten, makeStyles } from '@material-ui/core/styles'\r\nimport PropTypes from 'prop-types'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}))\r\n  // @ts-ignore\r\nconst TableToolbar = props => {\r\n  const classes = useToolbarStyles()\r\n  const {\r\n    numSelected,\r\n    addUserHandler,\r\n    deleteUserHandler,\r\n    preGlobalFilteredRows,\r\n    setGlobalFilter,\r\n    globalFilter,\r\n  } = props\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n        >\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\" onClick={deleteUserHandler}>\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <GlobalFilter\r\n          preGlobalFilteredRows={preGlobalFilteredRows}\r\n          globalFilter={globalFilter}\r\n          setGlobalFilter={setGlobalFilter}\r\n        />\r\n      )}\r\n    </Toolbar>\r\n  )\r\n}\r\n\r\nTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n  addUserHandler: PropTypes.func.isRequired,\r\n  deleteUserHandler: PropTypes.func.isRequired,\r\n  setGlobalFilter: PropTypes.func.isRequired,\r\n  preGlobalFilteredRows: PropTypes.array.isRequired,\r\n  globalFilter: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default TableToolbar\r\n","// @ts-nocheck\r\nimport React from 'react'\r\n\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\nimport MaUTable from '@material-ui/core/Table'\r\nimport PropTypes from 'prop-types'\r\nimport TableBody from '@material-ui/core/TableBody'\r\nimport TableCell from '@material-ui/core/TableCell'\r\nimport TableContainer from '@material-ui/core/TableContainer'\r\nimport TableFooter from '@material-ui/core/TableFooter'\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport TablePagination from '@material-ui/core/TablePagination'\r\nimport TablePaginationActions from './TablePaginationActions'\r\nimport TableRow from '@material-ui/core/TableRow'\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\r\nimport TableToolbar from './TableToolbar'\r\nimport {\r\n  useGlobalFilter,\r\n  usePagination,\r\n  useRowSelect,\r\n  useSortBy,\r\n  useTable,\r\n} from 'react-table'\r\nimport Firebase from '../../services/Firebase'\r\n\r\nconst IndeterminateCheckbox = React.forwardRef(\r\n  // @ts-ignore\r\n  ({ indeterminate, ...rest }, ref) => {\r\n    const defaultRef = React.useRef()\r\n    const resolvedRef = ref || defaultRef\r\n\r\n    React.useEffect(() => {\r\n       // @ts-ignore\r\n      resolvedRef.current.indeterminate = indeterminate\r\n    }, [resolvedRef, indeterminate])\r\n\r\n    return (\r\n      <>\r\n        <Checkbox ref={\r\n           // @ts-ignore\r\n          resolvedRef} {...rest} />\r\n      </>\r\n    )\r\n  }\r\n)\r\n\r\nconst inputStyle = {\r\n  padding: 0,\r\n  margin: 0,\r\n  border: 0,\r\n  background: 'transparent',\r\n}\r\n\r\n// Create an editable cell renderer\r\nconst EditableCell = ({\r\n  cell: { value: initialValue },\r\n  row: { index },\r\n  column: { id },\r\n  updateMyData, // This is a custom function that we supplied to our table instance\r\n}) => {\r\n  // We need to keep and update the state of the cell normally\r\n  const [value, setValue] = React.useState(initialValue)\r\n\r\n  const onChange = e => {\r\n    setValue(e.target.value)\r\n  }\r\n\r\n  // We'll only update the external data when the input is blurred\r\n  const onBlur = () => {\r\n    updateMyData(index, id, value)\r\n  }\r\n\r\n  // If the initialValue is changed externall, sync it up with our state\r\n  React.useEffect(() => {\r\n    setValue(initialValue)\r\n  }, [initialValue])\r\n\r\n  return (\r\n    <input\r\n      style={inputStyle}\r\n      value={value}\r\n      onChange={onChange}\r\n      onBlur={onBlur}\r\n    />\r\n  )\r\n}\r\n\r\nEditableCell.propTypes = {\r\n  cell: PropTypes.shape({\r\n    value: PropTypes.any.isRequired,\r\n  }),\r\n  row: PropTypes.shape({\r\n    index: PropTypes.number.isRequired,\r\n  }),\r\n  column: PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n  }),\r\n  updateMyData: PropTypes.func.isRequired,\r\n}\r\n\r\n// Set our editable cell renderer as the default Cell renderer\r\nconst defaultColumn = {\r\n  Cell: EditableCell,\r\n}\r\n\r\nconst EnhancedTable = ({\r\n  columns,\r\n  data,\r\n  setData,\r\n  updateMyData,\r\n  skipPageReset,\r\n}) => {\r\n  const {\r\n    getTableProps,\r\n    headerGroups,\r\n    prepareRow,\r\n    page,\r\n    gotoPage,\r\n    setPageSize,\r\n    preGlobalFilteredRows,\r\n    setGlobalFilter,\r\n    state: { pageIndex, pageSize, selectedRowIds, globalFilter },\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      //defaultColumn,\r\n      autoResetPage: !skipPageReset,\r\n      // updateMyData isn't part of the API, but\r\n      // anything we put into these options will\r\n      // automatically be available on the instance.\r\n      // That way we can call this function from our\r\n      // cell renderer!\r\n      updateMyData,\r\n    },\r\n    useGlobalFilter,\r\n    useSortBy,\r\n    usePagination,\r\n    useRowSelect,\r\n    hooks => {\r\n      hooks.allColumns.push(columns => [\r\n        // Let's make a column for selection\r\n        {\r\n          id: 'selection',\r\n          // The header can use the table's getToggleAllRowsSelectedProps method\r\n          // to render a checkbox.  Pagination is a problem since this will select all\r\n          // rows even though not all rows are on the current page.  The solution should\r\n          // be server side pagination.  For one, the clients should not download all\r\n          // rows in most cases.  The client should only download data for the current page.\r\n          // In that case, getToggleAllRowsSelectedProps works fine.\r\n          Header: ({ getToggleAllRowsSelectedProps }) => (\r\n            <div>\r\n              <IndeterminateCheckbox {...getToggleAllRowsSelectedProps()} />\r\n            </div>\r\n          ),\r\n          // The cell can use the individual row's getToggleRowSelectedProps method\r\n          // to the render a checkbox\r\n          Cell: ({ row }) => (\r\n            <div>\r\n              <IndeterminateCheckbox {...row.getToggleRowSelectedProps()} />\r\n            </div>\r\n          ),\r\n        },\r\n        ...columns,\r\n      ])\r\n    }\r\n  )\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    gotoPage(newPage)\r\n  }\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setPageSize(Number(event.target.value))\r\n  }\r\n\r\n  const removeByIndexs = (array, indexs) =>\r\n    array.filter((_, i) => !indexs.includes(i))\r\n\r\n  const deleteProductHandler = event => {\r\n    console.log(\"Remove\", data, selectedRowIds)\r\n    const newData = removeByIndexs(\r\n      data,\r\n      Object.keys(selectedRowIds).map(x => parseInt(x, 10))\r\n    )\r\n    setData(newData)\r\n\r\n    Firebase.deleteProducts(Object.keys(selectedRowIds).map(id => data[id].id)).catch(error => alert(error.message))\r\n\r\n  }\r\n\r\n  const addUserHandler = user => {\r\n    const newData = data.concat([user])\r\n    setData(newData)\r\n  }\r\n\r\n  // Render the UI for your table\r\n  return (\r\n    <TableContainer>\r\n      <TableToolbar\r\n        numSelected={Object.keys(selectedRowIds).length}\r\n        deleteUserHandler={deleteProductHandler}\r\n        addUserHandler={addUserHandler}\r\n        preGlobalFilteredRows={preGlobalFilteredRows}\r\n        setGlobalFilter={setGlobalFilter}\r\n        globalFilter={globalFilter}\r\n      />\r\n      <MaUTable {...getTableProps()}>\r\n        <TableHead>\r\n          {headerGroups.map(headerGroup => (\r\n            <TableRow {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map(column => (\r\n                <TableCell\r\n                  {...(column.id === 'selection'\r\n                    ? column.getHeaderProps()\r\n                    : column.getHeaderProps(column.getSortByToggleProps()))}\r\n                >\r\n                  {column.render('Header')}\r\n                  {column.id !== 'selection' ? (\r\n                    <TableSortLabel\r\n                      active={column.isSorted}\r\n                      // react-table has a unsorted state which is not treated here\r\n                      direction={column.isSortedDesc ? 'desc' : 'asc'}\r\n                    />\r\n                  ) : null}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          ))}\r\n        </TableHead>\r\n        <TableBody>\r\n          {page.map((row, i) => {\r\n            prepareRow(row)\r\n            return (\r\n              <TableRow {...row.getRowProps()}>\r\n                {row.cells.map(cell => {\r\n                  return (\r\n                    <TableCell {...cell.getCellProps()}>\r\n                      {cell.render('Cell')}\r\n                    </TableCell>\r\n                  )\r\n                })}\r\n              </TableRow>\r\n            )\r\n          })}\r\n        </TableBody>\r\n\r\n        <TableFooter>\r\n          <TableRow>\r\n            <TablePagination\r\n              rowsPerPageOptions={[\r\n                5,\r\n                10,\r\n                25,\r\n                { label: 'All', value: data.length },\r\n              ]}\r\n              colSpan={3}\r\n              count={data.length}\r\n              rowsPerPage={pageSize}\r\n              page={pageIndex}\r\n              SelectProps={{\r\n                inputProps: { 'aria-label': 'rows per page' },\r\n                native: true,\r\n              }}\r\n              onChangePage={handleChangePage}\r\n              onChangeRowsPerPage={handleChangeRowsPerPage}\r\n              ActionsComponent={TablePaginationActions}\r\n            />\r\n          </TableRow>\r\n        </TableFooter>\r\n      </MaUTable>\r\n    </TableContainer>\r\n  )\r\n}\r\n\r\nEnhancedTable.propTypes = {\r\n  columns: PropTypes.array.isRequired,\r\n  data: PropTypes.array.isRequired,\r\n  updateMyData: PropTypes.func.isRequired,\r\n  setData: PropTypes.func.isRequired,\r\n  skipPageReset: PropTypes.bool.isRequired,\r\n}\r\n\r\nexport default EnhancedTable\r\n","import React, { FunctionComponent } from 'react'\r\nimport { CellProps } from 'react-table'\r\nimport { ProductType } from '../../types'\r\nimport { Typography, Button } from '@material-ui/core'\r\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    image: {\r\n      width: 140,\r\n      display: \"inline-block\"\r\n    },\r\n    text: {\r\n      display: \"inline-block\"\r\n    }\r\n  }),\r\n);\r\n\r\n\r\nconst Product:FunctionComponent<CellProps<ProductType>> = ({cell}) => {\r\n  const classes = useStyles();\r\n  const {image, name} = cell?.value || cell.row.original\r\n  \r\n  return (\r\n  <div>\r\n    <img src={image} className={classes.image}/>\r\n    <Typography className={classes.text}>{name}</Typography>\r\n  </div>\r\n)}\r\n\r\nexport default Product","import React, { FunctionComponent } from 'react'\r\nimport { CellProps } from 'react-table'\r\n\r\nconst Inventory:FunctionComponent<CellProps<any>> = ({cell}) => (\r\n  <div>\r\n    {cell.value} in Stock\r\n  </div>\r\n)\r\n\r\nexport default Inventory","import React, { FunctionComponent, useEffect } from 'react'\r\n\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport EnhancedTable from './EnhancedTable'\r\nimport makeData from './makeData'\r\nimport Product from '../atoms/Product'\r\nimport Inventory from '../atoms/Inventory'\r\n\r\nexport type ProductTableProps = {\r\n  products: any\r\n}\r\n\r\nconst App:FunctionComponent<ProductTableProps> = ({products}) => {\r\n  const columns = React.useMemo(\r\n    () => [\r\n      {\r\n        Header: 'Product',\r\n        accessor: 'product',\r\n        Cell: Product\r\n      },\r\n      {\r\n        Header: 'Inventory',\r\n        accessor: 'stock',\r\n        Cell: Inventory,\r\n      },\r\n    ],\r\n    []\r\n  )\r\n\r\n  const memoData = React.useMemo(() => Object\r\n    .entries(products || {})\r\n    .map(([id, value]: [string, any]) => \r\n      ({...value, id})), \r\n    [products])\r\n\r\n  const [data, setData] = React.useState(memoData)\r\n  const [skipPageReset, setSkipPageReset] = React.useState(false)\r\n\r\n  \r\n  useEffect(() => {    \r\n    const pList =  Object.values(products || {}) ;\r\n    if(data != pList) {\r\n      setData(pList);\r\n    }\r\n\r\n  }, [products])\r\n  \r\n\r\n  // We need to keep the table from resetting the pageIndex when we\r\n  // Update data. So we can keep track of that flag with a ref.\r\n\r\n  // When our cell renderer calls updateMyData, we'll use\r\n  // the rowIndex, columnId and new value to update the\r\n  // original data\r\n  // @ts-ignore\r\n  const updateMyData = (rowIndex, columnId, value) => {\r\n    // We also turn on the flag to not reset the page\r\n    setSkipPageReset(true)\r\n    // @ts-ignore\r\n    setData(old =>\r\n// @ts-ignore\r\n      old.map((row, index) => {\r\n        if (index === rowIndex) {\r\n          return {\r\n            // @ts-ignore\r\n            ...old[rowIndex],\r\n            [columnId]: value,\r\n          }\r\n        }\r\n        return row\r\n      })\r\n    )\r\n  }\r\n\r\n \r\n  return (\r\n    <div>\r\n      <CssBaseline />\r\n      <EnhancedTable\r\n        columns={columns}\r\n        data={memoData}\r\n        setData={setData}\r\n        updateMyData={updateMyData}\r\n        skipPageReset={skipPageReset}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React, {useCallback, FunctionComponent, useMemo, useState, useEffect} from 'react'\r\nimport {useDropzone} from 'react-dropzone'\r\n\r\n\r\nconst baseStyle = {\r\n  flex: 1,\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  alignItems: 'center',\r\n  padding: '20px',\r\n  borderWidth: 2,\r\n  borderRadius: 2,\r\n  borderColor: '#eeeeee',\r\n  borderStyle: 'dashed',\r\n  backgroundColor: '#fafafa',\r\n  color: '#bdbdbd',\r\n  outline: 'none',\r\n  transition: 'border .24s ease-in-out'\r\n};\r\n\r\nconst activeStyle = {\r\n  borderColor: '#2196f3'\r\n};\r\n\r\nconst acceptStyle = {\r\n  borderColor: '#00e676'\r\n};\r\n\r\nconst rejectStyle = {\r\n  borderColor: '#ff1744'\r\n};\r\nconst thumbsContainer = {\r\n  display: 'flex',\r\n  flexDirection: 'row',\r\n  flexWrap: 'wrap',\r\n  marginTop: 16\r\n};\r\n\r\nconst thumb = {\r\n  display: 'inline-flex',\r\n  borderRadius: 2,\r\n  border: '1px solid #eaeaea',\r\n  marginBottom: 8,\r\n  marginRight: 8,\r\n  width: 100,\r\n  height: 100,\r\n  padding: 4,\r\n  boxSizing: 'border-box'\r\n};\r\n\r\nconst thumbInner = {\r\n  display: 'flex',\r\n  minWidth: 0,\r\n  overflow: 'hidden'\r\n};\r\n\r\nconst img = {\r\n  display: 'block',\r\n  width: 'auto',\r\n  height: '100%'\r\n};\r\n\r\nexport type DropImageProps = {\r\n  files: any[]\r\n  setFiles: (files: any[]) => void\r\n}\r\n\r\nconst DropImage:FunctionComponent<DropImageProps> = ({setFiles, files}) => {\r\n  const onDrop = useCallback(acceptedFiles => {\r\n    setFiles(acceptedFiles.map((file:any) => Object.assign(file, {\r\n      preview: URL.createObjectURL(file)\r\n    })));\r\n  }, [])\r\n  const {\r\n    getRootProps,\r\n    getInputProps,\r\n    isDragActive,\r\n    isDragAccept,\r\n    isDragReject\r\n  } = useDropzone({accept: 'image/*', onDrop});\r\n\r\n  const style = useMemo(() => ({\r\n    ...baseStyle,\r\n    ...(isDragActive ? activeStyle : {}),\r\n    ...(isDragAccept ? acceptStyle : {}),\r\n    ...(isDragReject ? rejectStyle : {})\r\n  }), [\r\n    isDragActive,\r\n    isDragReject\r\n  ]);\r\n\r\n  const thumbs = files.map((file:any) => (\r\n    <div \r\n    // @ts-ignore\r\n    style={thumb} key={file.name}>\r\n      <div style={thumbInner}>\r\n        <img\r\n          src={file.preview}\r\n          style={img}\r\n        />\r\n      </div>\r\n    </div>\r\n  ));\r\n\r\n  useEffect(() => () => {\r\n    // Make sure to revoke the data uris to avoid memory leaks\r\n    files.forEach((file: any) => URL.revokeObjectURL(file.preview));\r\n  }, [files]);\r\n\r\n  return (\r\n    <section className=\"container\">\r\n      \r\n      <div {\r\n        //@ts-ignore\r\n        ...getRootProps({style})}>\r\n        <input {...getInputProps()} />\r\n        <p>Drag 'n' drop some files here, or click to select files</p>\r\n      </div>\r\n      <aside \r\n      //@ts-ignore\r\n      style={thumbsContainer}>\r\n        {thumbs[thumbs.length-1]}\r\n      </aside>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default DropImage","import React, { useState, FunctionComponent } from 'react'\r\n\r\nimport { last, isEmpty } from 'rambda'\r\nimport AddIcon from '@material-ui/icons/Add'\r\nimport Button from '@material-ui/core/Button'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogContentText from '@material-ui/core/DialogContentText'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport PropTypes from 'prop-types'\r\nimport Switch from '@material-ui/core/Switch'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\nimport { ProductType } from '../../types'\r\nimport DropImage from \"../atoms/DropImage\"\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Firebase from '../../services/Firebase'\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nconst initialState = {\r\n  name: '',\r\n  stock: 0,\r\n  image: Firebase.getPlaceholderImagePath()\r\n}\r\n\r\nexport type AddDialogProps = {\r\n  open: boolean\r\n  toggle: (isOpen: boolean) => void\r\n  addHandler: (product: ProductType) => any \r\n}\r\n\r\ntype ImageType = {\r\n  name: string,\r\n  path: any\r\n}\r\n\r\n// @ts-ignore\r\nconst AddProductDialog:FunctionComponent<AddDialogProps> = props => {\r\n  const [state, setState] = useState(initialState)\r\n  const [files, setFiles] = useState<any[]>([]);\r\n  const [loading, toggleLoading] = useState(false);\r\n  const { addHandler } = props\r\n\r\n  const [switchState, setSwitchState] = React.useState({\r\n    addMultiple: false,\r\n  })\r\n// @ts-ignore\r\n  const handleSwitchChange = name => event => {\r\n    setSwitchState({ ...switchState, [name]: event.target.checked })\r\n  }\r\n\r\n  const resetSwitch = () => {\r\n    setSwitchState({ addMultiple: false })\r\n  }\r\n\r\n  const handleClickOpen = () => {\r\n    props.toggle(true)\r\n  }\r\n\r\n  const handleClose = () => {\r\n    props.toggle(false)\r\n    resetSwitch()\r\n  }\r\n\r\n  // @ts-ignore\r\n  const handleAdd = async event => {\r\n    if(!isEmpty(files)) \r\n      await Firebase.uploadStoreImage(last(files).name, last(files))\r\n    const url = await handleFiles(files)\r\n    addHandler({...state, image: url })  \r\n    console.log(\"STATE\", {...state, image: url });\r\n    setState(initialState)\r\n    setFiles([])\r\n    switchState.addMultiple ? props.toggle(true) : props.toggle(false)\r\n  }\r\n// @ts-ignore\r\n  const handleChange = name => async ({ target: { value } }) => {\r\n    await setState({ ...state, [name]: value })\r\n  }\r\n  const handleFiles = async (file: any) => {\r\n    file = file[file.length-1]\r\n    toggleLoading(true);\r\n    try{\r\n      const url = await Firebase.getStoreImagePath(file.name)\r\n      \r\n      await setState({...state, image: url});\r\n      console.log(\"URL\", state)\r\n      return url;\r\n\r\n    }\r\n    catch(error) {\r\n      alert(error.message)\r\n    }\r\n    \r\n    toggleLoading(false);\r\n  }\r\n  return (\r\n    <div>\r\n      {loading && <LinearProgress />}\r\n      <Dialog\r\n        open={props.open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Add Product</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>Add new product to table.</DialogContentText>\r\n          <Typography>Product Image</Typography>\r\n\r\n          <DropImage\r\n          // @ts-ignore\r\n          setFiles={setFiles} files={files}/>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            label=\"Product Name\"\r\n            type=\"text\"\r\n            fullWidth\r\n            value={state.name}\r\n            onChange={handleChange('name')}\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            label=\"Inventory\"\r\n            type=\"number\"\r\n            fullWidth\r\n            value={state.stock===0?undefined:state.stock}\r\n            onChange={handleChange('stock')}\r\n          />\r\n\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Tooltip title=\"Add multiple\">\r\n            <Switch\r\n              checked={switchState.addMultiple}\r\n              onChange={handleSwitchChange('addMultiple')}\r\n              value=\"addMultiple\"\r\n              inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n            />\r\n          </Tooltip>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleAdd} color=\"primary\">\r\n            Add\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default AddProductDialog\r\n","import React, { FunctionComponent, useState } from 'react'\r\nimport Login from '../Login/Login'\r\nimport { Typography, Button } from '@material-ui/core';\r\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\r\nimport ProductTable from '../../components/molecules/ProductTable'\r\nimport { ProductsProps } from './AllProductsContainer';\r\nimport AddProductDialog from '../../components/molecules/AddDialog';\r\n\r\nexport type HomeProps = ProductsProps\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    title: {\r\n     textAlign: \"left\",\r\n     display: \"inline-block\",\r\n     float: \"left\"\r\n    },\r\n    button: {\r\n      float: \"right\"\r\n    }\r\n  }),\r\n);\r\n\r\n\r\nconst AllProducts:FunctionComponent<HomeProps> = (props) => {\r\n  const [openAddDialog, toggleAddDialog] = useState(false)\r\n  const classes = useStyles();\r\n\r\n  return(\r\n    <div>\r\n\r\n      <Typography variant=\"h3\" className={classes.title}>Products</Typography>\r\n      <Button color=\"primary\" variant=\"contained\" className={classes.button} onClick={toggleAddDialog.bind(null, true)}>Add Product</Button>\r\n      {console.log(\"Props\", props)}\r\n      <ProductTable {...props}/>\r\n      <AddProductDialog addHandler={props.addNewProduct} open={openAddDialog} toggle={toggleAddDialog}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AllProducts","import React, {useState, FunctionComponent} from 'react'\r\n\r\nimport Firebase from '../../services/Firebase' \r\nimport { Redirect } from 'react-router-dom';\r\nimport { State } from '../../Redux/reducers';\r\nimport { connect } from 'react-redux';\r\nimport AllProducts from './AllProducts';\r\nimport { Dispatch } from 'redux';\r\nimport { addProduct } from '../../Redux/actions';\r\nimport { ProductType } from '../../types';\r\n\r\n\r\nexport type ProductsProps =  ReturnType<typeof mapStateToProps> & ReturnType<typeof mapDispatchToProps>\r\n\r\nconst AllProductsContainer:FunctionComponent<ProductsProps> = (props) => {\r\n  \r\nconsole.log(\"container\", props)\r\n  return (\r\n    <AllProducts {...props}/>\r\n  )\r\n}\r\nconst mapStateToProps = (state: State) => ({\r\n  user: state.user,\r\n  products: state.products\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n  //@ts-ignore\r\n  addNewProduct: (product: ProductType) => dispatch(addProduct(product))\r\n})\r\n\r\n// @ts-ignore\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AllProductsContainer);\r\n\r\n","import React, { FunctionComponent } from \"react\"\nimport { render } from \"react-dom\"\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect\n} from \"react-router-dom\";\n\nimport HomeContainer from \"./pages/Home/HomeContainer\";\nimport SignUpContainer from \"./pages/SignUp/SignUpContainer\";\nimport Drawer from \"./components/molecules/Drawer\";\nimport AllProductsContainer from \"./pages/AllProducts/AllProductsContainer\";\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\nimport Firebase, { User } from \"./services/Firebase\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(4),\n      // @ts-ignore\n      paddingLeft: ({user}) => user?310:0,\n      // @ts-ignore\n      paddingTop: ({user}) => user?100:0\n    },\n  }),\n);\n\nexport type RoutesProps = {\n  user: User\n}\n\nconst Routes:FunctionComponent<RoutesProps> = (props) => {\n    const classes = useStyles(props);\n\n    return(\n      <Router>\n        {props.user && <Drawer />}\n        <div className={classes.content}>\n        <Switch>\n          <Routed path=\"/signup\" Component={SignUpContainer} />\n          <PrivateRoute path=\"/all_products\" Component={AllProductsContainer}/>\n          <Routed path=\"/\" Component={HomeContainer} />\n        </Switch>   \n        </div>     \n      </Router>\n    )\n}\n\nconst Routed:FunctionComponent<{Component: any, path: string}> = \n({Component, path}) => (\n  <Route path={path}>\n    <Component />\n  </Route>\n)\n\n//@ts-ignore\nconst PrivateRoute = ({ Component, ...rest }) => (\n  <Route {...rest} render={(props) => (\n    Firebase.user\n      ? <Component {...props} />\n      : <Redirect to='/' />\n  )} />\n)\n\nexport default Routes","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Routes from './Router';\nimport {connect} from 'react-redux'\n\nfunction App({user}) {\n  return (\n    <div className=\"App\">\n      <Routes user={user}/>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) =>  ({\n  user: state.user\n})\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux'\nimport store from './Redux/store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, \n  document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}